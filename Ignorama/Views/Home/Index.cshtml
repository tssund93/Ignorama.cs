@using Microsoft.AspNetCore.Identity
@model IEnumerable<Ignorama.Models.Tag>
@inject UserManager<User> UserManager
@inject ForumContext ForumContext

<div class="row constrained dropdown">
    <div class="col-xs-12 above-threads">
        @if (!Util.IsBanned(await UserManager.GetUserAsync(User), Util.GetCurrentIPString(Context.Request), ForumContext))
        {
            <a class="btn btn-default btn-sm threads" asp-controller="Threads" asp-action="New">New Thread</a>
        }
        <form class="right-dropdown">
            <a class="dropdown-toggle btn btn-default btn-sm" data-toggle=dropdown>
                Boards <b class=caret></b>
            </a>
            <ul class="dropdown-menu dropdown-menu-form pull-right boards" role=menu>
                <li v-for="tag in tags">
                    <label>
                        <input v-model="selectedTags" type=checkbox :value=tag.ID :checked="selectedTags.includes(tag.ID)" v-on:change="updateSelectedTag(tag)">{{ tag.Name }}
                    </label>
                </li>
            </ul>
        </form>
        <div class="right-dropdown">
            <a class="dropdown-toggle btn btn-default btn-sm" data-toggle=dropdown>
                <b class="glyphicon glyphicon-search"></b> <b class=caret></b>
            </a>
            <ul class="dropdown-menu dropdown-menu-form searchmenu pull-right">
                <li>
                    <input class=searchbox name=search type=text placeholder="Search" v-model="search">
                </li>
            </ul>
        </div>
    </div>
</div>
<div class="row constrained">
    <ul class="tabs nav navbar-nav">
        <li class="nav-item">
            <a class="nav-link" v-on:click.prevent="view = ''" href="#" v-bind:class="{ active: view === '' }">All</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" v-on:click.prevent="view = 'following'" href="#" v-bind:class="{ active: view === 'following' }">Following</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" v-on:click.prevent="view = 'hidden'" href="#" v-bind:class="{ active: view === 'hidden' }">Hidden</a>
        </li>
    </ul>
</div>

<div class="row constrained" v-if="!threads.length">
    <div class="col-xs-12 thread loading">
        <img src="~/loading.png" />
    </div>
</div>
<div class="row constrained" v-else-if="!visibleThreads.length" v-cloak>
    <div class="col-xs-12 thread">
        Nothing to see here!
    </div>
</div>
<div v-else class="row constrained" v-for="thread in visibleThreads">
    <div class="col-xs-12 thread" :class="{ newposts: thread.Following && thread.LastSeenPostID < thread.LastPost.ID }" v-cloak>
        <div class="btn-group thread-dropdown">
            <a class="btn btn-default btn-xs dropdown-toggle" data-toggle=dropdown>
                <span class=caret>
                </span>
            </a>
            <ul class="dropdown-menu pull-right">
                <li>
                    <a v-if="thread.Hidden" href="#" v-on:click.prevent="toggleHidden(thread)">
                        Unhide thread
                    </a>
                    <a v-else href="#" v-on:click.prevent="toggleHidden(thread)">
                        Hide thread
                    </a>
                </li>
                <li v-if="thread.UserRoles.includes('Moderator')">
                    <a v-if="thread.Stickied" href="#" v-on:click.prevent="toggleStickied(thread)">
                        Unsticky thread
                    </a>
                    <a v-else href="#" v-on:click.prevent="toggleStickied(thread)">
                        Sticky thread
                    </a>
                </li>
                <li v-if="thread.UserRoles.includes('Moderator')">
                    <a v-if="thread.Locked" href="#" v-on:click.prevent="toggleLocked(thread)">
                        Unlock thread
                    </a>
                    <a v-else href="#" v-on:click.prevent="toggleLocked(thread)">
                        Lock thread
                    </a>
                </li>
                <li v-if="thread.UserRoles.includes('Moderator')">
                    <a :href="'/Bans/New/' + thread.FirstPost.ID">Ban OP</a>
                </li>
                <li v-if="thread.UserRoles.includes('Admin')">
                    <a v-on:click.prevent="purgeThread(thread.ID)" href="#">Purge Thread</a>
                </li>
            </ul>
        </div>
        <span v-if="thread.Stickied" class="thread-icon glyphicon glyphicon-bookmark"></span>
        <span v-if="thread.Locked" class="thread-icon glyphicon glyphicon-lock"></span>
        <a :title="thread.FirstPost.Deleted ? '(This post has been deleted)' : thread.FirstPost.Text" :href="'Threads/View/' + thread.ID">{{ thread.Title }}</a>
        <a v-if="thread.Following" v-on:click.prevent="unfollow(thread)" href="#" title="Unfollow thread">
            <b class="unfollow-link glyphicon glyphicon-eye-close"></b>
        </a>
        <br>
        <span class="thread-info">
            <user :user="thread.OP" :ip="thread.FirstPost.IP" :anonymous="thread.FirstPost.Anonymous" :detailed-view="thread.UserRoles.includes('Moderator')" :banned="thread.UserBans.length != 0" :ip-banned="thread.IPBans.length != 0" :banned-post-id="thread.FirstPost.ID"></user>
            <br />
            Board: {{ thread.Tag.Name }}
            <br />
            Replies: {{ thread.PostCount - 1 }} | Last reply: <span>{{ thread.LastPost.Time | date }}</span>
        </span>
    </div>
</div>

@section Scripts {
    <environment include="Development">
        <script src="~/js/user-component.js" asp-append-version="true"></script>
        <script src="~/js/date-mixin.js" asp-append-version="true"></script>
        <script src="~/js/threads.js" asp-append-version="true"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/js/user-component.js" asp-append-version="true"></script>
        <script src="~/js/date-mixin.min.js" asp-append-version="true"></script>
        <script src="~/js/threads.min.js" asp-append-version="true"></script>
    </environment>
}